<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link rel="stylesheet" href="/css/output.css">
    <link rel="stylesheet" href="/css/custom.css">
    <link rel="stylesheet" href="/css/fontawesome-pro/css/all.min.css">
    <script src="/js/main.js" defer></script> 
</head>
<body class="bg-gray-100">
    <!-- Messages Div -->
    <div class="fixed top-5 z-50 w-full flex justify-center">
        <div id="messages" class="text-base w-full max-w-2xl">
            <% if (successMessage) { %>
                <div class="text-green-600 bg-green-300 p-4 text-center rounded-md"><%= successMessage %></div>
            <% } %>
            <% if (errorMessage) { %>
                <div class="text-red-600 bg-red-300 p-4 text-center rounded-md"><%= errorMessage %></div>
            <% } %>
        </div>
    </div>
    <div class="w-full h-lvh flex flex-col">
        <!-- Header -->
        <div class="flex justify-between items-center bg-red-600 p-5 sticky top-0">
            <div>
                <h1 class="text-white font-bold text-2xl">Malawi Post Corporation</h1>
            </div>
            <div class="flex items-center gap-5">
                <i class="fa-duotone fa-solid fa-user text-2xl text-white cursor-pointer"></i>
                <h1 class="text-white cursor-pointer font-bold"><%= user.first_name %> <%= user.last_name %></h1>
                <a href="/auth/logout"><i class="fa-duotone fa-solid fa-right-from-bracket text-2xl text-white cursor-pointer"></i></a>
            </div>
        </div>

        <!-- Main Container -->
        <div class="flex flex-1">
            <!-- Sidebar -->
            <div class="w-1/4 max-w-72 bg-gray-700 flex flex-col">
                <div class="flex gap-3 items-center justify-start p-5 border-b">
                    <a href="/dashboard"><i class="fa-sharp-duotone fa-solid fa-gauge text-2xl text-white"></i></a>
                    <a href="/dashboard" class="text-xl text-white cursor-pointer">Dashboard</a>
                </div>

                <div class="flex gap-3 items-center justify-start p-5 border-b">
                    <a href="/branches"><i class="fa-thin fa-building text-2xl text-white"></i></a>
                    <a href="/branches" class="text-xl text-white cursor-pointer">Branches</a>
                </div>

                <div class="flex gap-3 items-center justify-start p-5 border-b">
                    <a href="/staff"><i class="fa-thin fa-users text-2xl text-white"></i></a>
                    <a href="/staff" class="text-xl text-white cursor-pointer">Staff</a>
                </div>

                <div class="flex gap-3 items-center justify-start p-5 border-b">
                    <a href="/parcel/sending"><i class="fa-thin fa-share-from-square text-2xl text-white"></i></a>
                    <a href="/parcel/sending" class="text-xl text-white cursor-pointer">Sending</a>
                </div>

                <div class="flex gap-3 items-center justify-start p-5 border-b">
                    <a href="/parcel/collecting"><i class="fa-light fa-box text-2xl text-white"></i></a>
                    <a href="/parcel/collecting" class="text-xl text-white cursor-pointer">Collecting</a>
                </div>

                <div class="flex gap-3 items-center justify-start p-5 border-b">
                    <a href="/tracking-devices"><i class="fa-thin fa-tablet-rugged text-2xl text-white"></i></a>
                    <a href="/tracking-devices" class="text-xl text-white cursor-pointer">Tracking Devices</a>
                </div>

                <div class="flex gap-3 items-center justify-start p-5 border-b">
                    <a href="/vehicles"><i class="fa-thin fa-truck text-2xl text-white"></i></a>
                    <a href="/vehicles" class="text-xl text-white cursor-pointer">Vehicles</a>
                </div>

                <!-- New Link for Assigning Parcels -->
                <div class="flex gap-3 items-center justify-start p-5  bg-red-500 border-b">
                    <a href="/parcel/assign-parcels"><i class="fa-light fa-truck-loading text-2xl text-white"></i></a>
                    <a href="/parcel/assign-parcels" class="text-xl text-white cursor-pointer">Assign Parcels</a>
                </div>
            </div>

            <!-- Main Content -->
            <div class="flex-1">
                <div class="bg-gray-300 p-5 text-red-600 font-bold text-xl">Parcel - Vehicle Allocation</div>

               <!-- Form to Assign Parcels -->
                <form action="/parcel/assign-parcels" class="mt-5 bg-white p-5 rounded shadow-md" id="assignParcelForm">

                    <!-- Select for Branch Route (Combined Origin and Destination) -->
                    <div class="mb-4">
                        <label for="branchRoute" class="block text-gray-700">Branch Route:</label>
                        <select name="branchRoute" id="branchRoute" class="w-full p-2 mt-2 border rounded-md">
                            <% routes.forEach(route => { %>
                                <option value="<%= route.originBranchId %>-<%= route.destinationBranchId %>">
                                    <%= route.originBranchName %> to <%= route.destinationBranchName %>
                                </option>
                            <% }) %>
                        </select>
                    </div>

                    <!-- Select for Vehicle -->
                    <div class="mb-4">
                        <label for="vehicle" class="block text-gray-700">Vehicle:</label>
                        <select name="vehicle" id="vehicle" class="w-full p-2 mt-2 border rounded-md">
                            <% vehicles.forEach(vehicle => { %>
                                <option value="<%= vehicle.vehicle_id %>">
                                    <%= vehicle.vehicle_name %> - <%= vehicle.vehicle_registration_number %>
                                </option>
                            <% }) %>
                        </select>
                    </div>

                    <!-- Submit Button -->
                    <div class="mt-4">
                        <button type="submit" class="bg-red-600 text-white p-3 rounded-md w-full">Assign Parcel</button>
                    </div>
                </form>
                <!-- Parcel Table (Initially Empty) -->
                <div class="mt-10 bg-white p-5 rounded shadow-md">
                    <h2 class="text-lg font-bold mb-4">Parcels for Selected Route</h2>
                    <table class="w-full text-left table-auto">
                        <thead>
                            <tr class="bg-gray-200">
                                <th class="p-2">Parcel ID</th>
                                <th class="p-2">Tracking Number</th>
                                <th class="p-2">Sender</th>
                                <th class="p-2">Recipient</th>
                                <th class="p-2">Parcel Name</th>
                                <th class="p-2">Value (MWK)</th>
                                <th class="p-2">Weight (kg)</th>
                                <th class="p-2">Collection Date</th>
                                <th class="p-2">Delivery Date</th>
                                <th class="p-2">Status</th>
                            </tr>
                        </thead>
                        <tbody id="parcelTableBody">
                            <!-- JavaScript will dynamically populate rows here -->
                        </tbody>
                    </table>
                </div>                
            </div>
        </div>
    </div>
    <script>
        const parcels = <%- JSON.stringify(availableParcels) %>; // Pass parcels to client-side JavaScript

        // Function to filter parcels and update the table
        function filterParcelsByRoute(route) {
            const [originBranchId, destinationBranchId] = route.split('-');
            const filteredParcels = parcels.filter(parcel => 
                parcel.origin_branch_id === parseInt(originBranchId) && parcel.destination_branch_id === parseInt(destinationBranchId)
            );

            const tableBody = document.getElementById('parcelTableBody');
            tableBody.innerHTML = ''; // Clear existing rows

            filteredParcels.forEach(parcel => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td class="p-2">${parcel.parcel_id}</td>
                    <td class="p-2">${parcel.tracking_number}</td>
                    <td class="p-2">${parcel.sender_name}</td>
                    <td class="p-2">${parcel.recipient_name}</td>
                    <td class="p-2">${parcel.parcel_name}</td>
                    <td class="p-2">${parcel.parcel_value}</td>
                    <td class="p-2">${parcel.parcel_weight}</td>
                    <td class="p-2">${parcel.collection_date}</td>
                    <td class="p-2">${parcel.delivery_date || 'N/A'}</td>
                    <td class="p-2">${parcel.status}</td>
                `;
                tableBody.appendChild(row);
            });
        }

        // Add event listener to the route selection dropdown
        document.getElementById('branchRoute').addEventListener('change', function() {
            filterParcelsByRoute(this.value);
        });

        // Initial population (optional, if you want to show parcels for the default selection)
        filterParcelsByRoute(document.getElementById('branchRoute').value);



        // Form submission handler
        document.getElementById('assignParcelForm').addEventListener('submit', function(event) {
            event.preventDefault(); // Prevent default form submission

            const selectedRoute = document.getElementById('branchRoute').value;
            const vehicleId = document.getElementById('vehicle').value;

            // Get all parcels in the filtered table
            const parcelTableBody = document.getElementById('parcelTableBody');
            const rows = Array.from(parcelTableBody.querySelectorAll('tr'));
            const parcelData = rows.map(row => {
                const cells = row.querySelectorAll('td');
                return {
                    parcel_id: cells[0].textContent,
                    tracking_number: cells[1].textContent,
                    sender_name: cells[2].textContent,
                    recipient_name: cells[3].textContent,
                    parcel_name: cells[4].textContent,
                    parcel_value: cells[5].textContent,
                    parcel_weight: cells[6].textContent,
                    collection_date: cells[7].textContent,
                    delivery_date: cells[8].textContent,
                    status: cells[9].textContent
                };
            });

            const data = {
                branchRoute: selectedRoute,
                vehicleId: vehicleId,
                parcels: parcelData
            };

            fetch('/parcel/assign-parcels', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(result => {
                console.log('Success:', result);
                window.location.reload();
            })
            .catch(error => {
                console.error('Error:', error);
            });
        });
    </script>
</body>
</html>
